apply plugin: 'com.github.spotbugs'
apply plugin: 'org.sonarqube'
apply plugin: "com.github.kt3k.coveralls"
apply plugin: 'checkstyle'
apply plugin: 'jacoco'
apply plugin: 'java'
apply plugin: 'pmd'

configurations {
  checkstyleConfig
}

checkstyle {
  configFile = rootProject.file('config/checkstyle/checkstyle.xml')
  configProperties = [
      'configDir': rootProject.file('config/checkstyle'),
      'baseDir'  : rootDir,
  ]
  toolVersion = pluginVersion.checkstyle
  showViolations = true
}

spotbugs {
  effort = 'max'
  excludeFilter = file("${rootDir}/config/findbugs/exclude.xml")
}

pmd {
  ruleSets = ["basic", "braces"]
  toolVersion = pluginVersion.pmd
}

jacoco {
  toolVersion = pluginVersion.jacoco
}

jacocoTestReport {
  group = 'Coverage reports'
  description = 'Generates a test coverage report for a project'

  reports {
    xml.enabled = true
    html.enabled = true
  }
}

sonarqube {
  properties {
//    property "sonar.projectVersion"
//    property "sonar.projectKey", "mapbox-java:services"
    property "sonar.java.coveragePlugin", "jacoco"
    property "sonar.jacoco.reportPaths", "${project.buildDir}/jacoco/test.exec"
    property "sonar.links.homepage", "https://github.com/mapbox/mapbox-java"
  }
}



pmd {
  ignoreFailures = true
  sourceSets = [sourceSets.main]
  reportsDir = file("$project.buildDir/reports/pmd")
  ruleSets = [
      "basic",
      "braces"
  ]
}

tasks.withType(Checkstyle) {
  enabled = System.properties.containsKey('checkstyle')
  group = 'Checkstyle'
  reports {
    xml.enabled = false
    html.enabled = true
  }
}

afterEvaluate {
  tasks.findAll { it.name.startsWith('findbugs') }.each {
    it.enabled = System.properties.containsKey('findbugs')
    it.group = 'FindBugs'
    it.reports {
      xml.enabled = false
      html.enabled = true
    }
  }
}

tasks.withType(Pmd) {
  enabled = System.properties.containsKey('pmd')
  group = 'PMD'
  reports {
    xml.enabled = false
    html.enabled = true
  }
}